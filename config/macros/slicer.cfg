[gcode_macro PRINT_START]
gcode:
	# Fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
    {% set target_bed = params.BED|int %}
    {% set curr_bed_type = params.BED_TYPE|string %}
    {% set target_extruder = params.EXTRUDER|int %}
    {% set idle_extruder = params.EXTRUDER_IDLE|default("150")|int %}
    {% set filament_type = params.FILAMENT_TYPE|string %}
    {% set max_fan_speed = params.MAX_FAN|float %}
    {% set target_chamber = params.CHAMBER|default("45")|int %}
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

    # debugging prints
    {%- set no_fans_string = "_NO_FANS" -%}
    RESPOND TYPE=echo MSG='target_bed = {target_bed}'
    RESPOND TYPE=echo MSG='curr_bed_type = {curr_bed_type}'
    RESPOND TYPE=echo MSG='target_extruder = {target_extruder}'
    RESPOND TYPE=echo MSG='idle_extruder = {idle_extruder}'
    RESPOND TYPE=echo MSG='filament_type = {filament_type}'
    RESPOND TYPE=echo MSG='max_fan_speed = {max_fan_speed}'
    RESPOND TYPE=echo MSG='target_chamber = {target_chamber}'
    RESPOND TYPE=echo MSG='Filamanet type with no fans string = { filament_type + no_fans_string }'

    # clear all offset values
    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0

    # set pid profiles for bed and extruder based on fan speed and filament type [kalico feature]
    {% if max_fan_speed == 0 %}
        PID_PROFILE LOAD={ filament_type + no_fans_string } HEATER=extruder VERBOSE=high
    {% else %}
        PID_PROFILE LOAD={filament_type} HEATER=extruder VERBOSE=high
    {% endif %}
    PID_PROFILE LOAD={filament_type} HEATER=heater_bed VERBOSE=high
    
    # home printer 
    G28
    G0 Z2
    status_heating

    # set extruder to safe bed probing temp, and wipe nozzle
    M109 S160
    WIPE_NOZZLE
    ## NOTE: i had some code here for setting temp based on bed type, but accidentally deleted it.  maybe redo that?

    # go to center of bed for warm up session.
    CENTER 

    # Checks if the chamber temp is higher than 0c - if so then trigger a heatsoak
    {% if target_chamber > 0 %}
        M106 S255
        BEDFANSSLOW
        ##  Uncomment if you have a Nevermore.
        # SET_FAN_SPEED FAN=nevermore SPEED=1                   # Turn on the nevermore
        M190 S{target_bed}
        G4 P300000
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber_toolhead" MINIMUM={target_chamber}
    {% else %}
      # If the bed temp is not over 90c it skips the heatsoak and just heats up to set temp with a 1 min soak.
        ## TODO: add in heat soak, and bed check (this was removed in favor of chamber)
        M190 S{target_bed}
    {% endif %}
    WIPE_NOZZLE

    # rehome, calibrate probe tilt, mesh
    G28 Z METHOD=CONTACT CALIBRATE=1
    Z_TILT_ADJUST
    BED_MESH_CALIBRATE RUNS=2

    # rehome after mesh and tilt
    WIPE_NOZZLE
    G28 Z METHOD=CONTACT CALIBRATE=0

    # Heats up the hotend up to target via slicer
    M107                                                # Turn off partcooling fan
    M109 S{target_extruder}                             # Heat hotend to print temp

    # Deretract Filament
    G92 E0                         ; zero the extruder
    G1 E14.0 F3600                 ; de-retract filament

    # set z-offset based on plate type.
    {% if curr_bed_type=="Cool Plate" %}
        RESPOND TYPE=echo MSG='setting offset cool: 0.0'
        SET_GCODE_OFFSET Z=0.0 move=1
    {% elif curr_bed_type=="Engineering Plate" %}
        RESPOND TYPE=echo MSG='setting offset engineering: 0.0'
        SET_GCODE_OFFSET Z=0.0 move=1
    {% elif curr_bed_type=="High Temp Plate" %}
        RESPOND TYPE=echo MSG='setting offset high temp: 0.075'
        SET_GCODE_OFFSET Z=0.075 move=1
    {% elif curr_bed_type=="Textured PEI Plate" %}
        RESPOND TYPE=echo MSG='setting offset textured: 0.05'
        SET_GCODE_OFFSET Z=0.05 move=1
    {% else %}
        RESPOND TYPE=echo MSG='setting offset ELSE: 0.0'
        SET_GCODE_OFFSET Z=0.0 move=1
    {% endif %}

    # printing time!
    status_printing
    PRIME_LINE


# [gcode_macro PRINT_START_SIMPLE]
# gcode:
#   # Fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
#   {% set target_bed = params.BED|int %}
#   {% set target_extruder = params.EXTRUDER|int %}
#   {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
#   {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

#   # Homes the printer and sets absolute positioning
#   _HOME_IF_NEEDED                                     # Full home (XYZ)
#   G90                                                 # Absolute position
#   M83 ; extruder relative mode

#   # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak
#     M106 S255                                         # Turn on the PT-fan
#     SET_FAN_SPEED FAN=nevermore SPEED=1                   # Turn on the nevermore
#     G1 X{x_wait} Y{y_wait} Z15 F9000                  # Go to center of the bed
#     M190 S{target_bed}                                # Set target temp for the bed

#   # Heats up the hotend up to target via slicer
#   M107                                                # Turn off partcooling fan
#   M109 S{target_extruder}                             # Heat hotend to print temp

#   # Create a prime line and starts the print
#   PRIME_LINE
#   # NOZZLE_PURGE

[gcode_macro PRINT_END]
gcode: 
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 75, th.axis_maximum.z - 5]|min %}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-15.0 F3600                 ; retract filament

    TURN_OFF_HEATERS

    RESPOND TYPE=echo MSG='x_safe = {x_safe}'
    RESPOND TYPE=echo MSG='y_safe = {y_safe}'
    RESPOND TYPE=echo MSG='z_safe = {z_safe}'
    RESPOND TYPE=echo MSG='th.axis_maximum.x/2 = {th.axis_maximum.x/2}'
    RESPOND TYPE=echo MSG='th.axis_maximum.y - 2 = {th.axis_maximum.y - 2}'

    RESPOND TYPE=echo MSG='absolute'
    G90
    RESPOND TYPE=echo MSG='safe positioning'
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000 ; move nozzle to remove stringing
    RESPOND TYPE=echo MSG='back positioning'
    G0 X{th.axis_maximum.x/2} Y{th.axis_maximum.y - 2} F3600 ; park nozzle at rear
    RESPOND TYPE=echo MSG='temp wait'
    TEMPERATURE_WAIT SENSOR=extruder MAXIMUM=180
    RESPOND TYPE=echo MSG='wipe'
    WIPE_NOZZLE
    RESPOND TYPE=echo MSG='back positioning'
    G0 X{th.axis_maximum.x/2} Y{th.axis_maximum.y - 2} F3600

    RESPOND TYPE=echo MSG='disable fans'
    M107 ; turn off fan
    # SET_FAN_SPEED FAN=nevermore SPEED=0                  # Turn off the nevermore
    # UPDATE_DELAYED_GCODE ID=filter_off DURATION=180
    BEDFANSOFF

    status_ready
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


[gcode_macro PRINT_START_MOVEMENT_ONLY]
gcode = 
	G28
	G0 Z2
	WIPE_NOZZLE
	CENTER
	WIPE_NOZZLE
	G28 Z METHOD=CONTACT CALIBRATE=1
	Z_TILT_ADJUST
	BED_MESH_CALIBRATE RUNS=2
	WIPE_NOZZLE
	G28 Z METHOD=CONTACT CALIBRATE=0

#=====================================================
# LAYER CHANGE MACROS
#=====================================================
[gcode_macro BEFORE_LAYER_CHANGE]
gcode:
[gcode_macro AFTER_LAYER_CHANGE]
gcode: